{"version":3,"file":"static/js/414.19a72a72.chunk.js","mappings":"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","sources":["../node_modules/@babel/standalone|sync","../../README.md","preset.js","App.js","bootstrap.js"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 5764;\nmodule.exports = webpackEmptyContext;","import * as component_1 from '@kne/current-lib_info-page';\nimport '@kne/current-lib_info-page/dist/index.css';\nimport * as component_3 from 'antd';\nimport '@kne/current-lib_info-page/dist/index.css';\nimport '@kne/current-lib_info-page/dist/index.css';\nconst readmeConfig = {\n    name: `info-page`,\n    summary: `<h3><em><code>InfoPage</code></em> 何时使用</h3>\n<p>一般用在复杂的详情展示页面，<code>InfoPage</code> 提供了一个标准的展示信息的格式</p>\n<h3>特点</h3>\n<ul>\n<li>支持 <code>Content</code> 组件 <code>Descriptions</code> 组件的组合</li>\n<li>支持 <code>Collapse</code> 组件组合</li>\n<li><code>InfoPage.Part</code>、<code>InfoPage.Collapse</code> 需要放在 <code>InfoPage</code> 之下，<code>Content</code>、<code>Descriptions</code> 可以任意组合</li>\n</ul>\n<h3><em><code>Content</code></em> 何时使用</h3>\n<p>成组展示多个字段，常见于详情页的信息展示</p>\n<h3>特点</h3>\n<p>labelAlign 不为 auto 时会自动计算 label 的最小宽度使所有 label 的宽度等于最长的 label 宽度，使视觉上更加整齐有秩序感</p>`,\n    description: `一般用在复杂的详情展示页面，InfoPage提供了一个标准的展示信息的格式`,\n    packageName: `@kne/info-page`,\n    api: `<h3>InfoPage</h3>\n<p>同 <a href=\"https://ant.design/components/Card#api\"><code>Ant Design Card</code></a></p>\n<p>新增参数：</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>subtitle</td>\n<td>副标题</td>\n<td>ReactNode</td>\n<td>-</td>\n</tr>\n<tr>\n<td>className</td>\n<td><code>InfoPage</code> 的 <code>className</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>InfoPage.Part</h4>\n<p>同 <a href=\"https://ant.design/components/Card#api\"><code>Ant Design Card</code></a></p>\n<p>新增参数：</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>subtitle</td>\n<td>副标题</td>\n<td>ReactNode</td>\n<td>-</td>\n</tr>\n<tr>\n<td>className</td>\n<td><code>Part</code> 的 <code>className</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>InfoPage.Collapse</h4>\n<p>同 <a href=\"https://ant.design/components/Collapse#collapse\"><code>Ant Design Collapse</code></a></p>\n<p>新增参数：</p>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>className</td>\n<td><code>Part</code> 的 <code>className</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Content</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>list</td>\n<td><code>Content</code> 的内容列表</td>\n<td><code>listItemProps[]</code></td>\n<td>[]</td>\n</tr>\n<tr>\n<td>labelAlign</td>\n<td><code>label</code> 的对齐方式可以传入的值 <code>left,right,center,auto</code>,为 <code>auto</code> 时 <code>label</code> 不计算最小宽度</td>\n<td>string</td>\n<td>left</td>\n</tr>\n<tr>\n<td>col</td>\n<td>列数</td>\n<td>number</td>\n<td>1</td>\n</tr>\n<tr>\n<td>size</td>\n<td>默认为 <code>14px</code>，可以传值为 <code>small</code>，<code>size</code> 为 <code>small</code> 时字号为 <code>12px</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>gutter</td>\n<td>栅格间隔，可以写成像素值或支持响应式的对象写法来设置水平间隔 <code>{ xs: 8, sm: 16, md: 24}</code>。或者使用数组形式同时设置 [水平间距, 垂直间距]</td>\n<td>number</td>\n<td>0</td>\n</tr>\n<tr>\n<td>className</td>\n<td><code>Content</code> 的 <code>className</code></td>\n<td>string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>itemRender</td>\n<td>接收 <code>Content Inner</code> 和 <code>Inner</code> 的 <code>label, content, index</code>，可以根据数据信息返回想要渲染的内容</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>listItemProps</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>display</td>\n<td>数据是否展示，当为 <code>function</code> 时可以接收到 <code>item, list</code> 参数，<code>item</code> 为当前项配置，<code>dataSource</code> 为整个组件的 <code>dataSource</code> 配置</td>\n<td>boolean | function</td>\n<td>true</td>\n</tr>\n<tr>\n<td>block</td>\n<td>是否单行显示该条信息</td>\n<td>ReactNode | string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>label</td>\n<td>标题</td>\n<td>ReactNode | string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>content</td>\n<td>内容</td>\n<td>ReactNode | string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h3>Descriptions</h3>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>dataSource</td>\n<td>详情数据源，内部每个数组为一行数据，每行数据中每个对象为一列数据，每行最多包含 <code>2</code> 列内容，多余的会被丢弃</td>\n<td><code>dataSourceItemProps[]</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>itemRender</td>\n<td>接收 <code>Descriptions Inner</code> 和 <code>Inner</code> 的 <code>label, content, displaty, index</code>，可以根据数据信息返回想要渲染的内容</td>\n<td>function</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n<h4>dataSourceItemProps</h4>\n<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>display</td>\n<td>数据是否展示，当为 <code>function</code> 时可以接收到 <code>item, dataSource</code> 参数，<code>item</code> 为当前项配置，<code>dataSource</code> 为整个组件的 <code>dataSource</code> 配置</td>\n<td>boolean | function</td>\n<td>true</td>\n</tr>\n<tr>\n<td>label</td>\n<td>数据展示的标题</td>\n<td>ReactNode | string</td>\n<td>-</td>\n</tr>\n<tr>\n<td>content</td>\n<td>数据展示的内容</td>\n<td>ReactNode | string</td>\n<td>-</td>\n</tr>\n</tbody>\n</table>`,\n    example: {\n        isFull: false,\n        className: `info_page_52434`,\n        style: ``,\n        list: [{\n    title: `InfoPage`,\n    description: `这里填写示例说明`,\n    code: `const {default: InfoPage} = _InfoPage;\nconst {Button} = antd;\n\nconst BaseExample = () => {\n  return (\n    <InfoPage>\n      InfoPage\n      <InfoPage.Part\n        title=\"Part Title\"\n        subtitle=\"我是一个subtitle\"\n        extra={<Button>操作</Button>}\n      >\n        InfoPage.Part\n        <InfoPage.Part\n          title=\"Part Title\"\n          subtitle=\"我是一个subtitle\"\n          extra={<Button>操作</Button>}\n        >\n          InfoPage.InfoPage.Part\n        </InfoPage.Part>\n      </InfoPage.Part>\n      <InfoPage.Collapse\n        items={[\n          {key: '1', label: 'This is default size panel header', children: <p>InfoPage.Collapse</p>},\n          {key: '2', label: 'This is default size panel header2', children: <p>InfoPage.Collapse2</p>},\n        ]}\n      />\n    </InfoPage>\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_InfoPage\",\n    packageName: \"@kne/current-lib_info-page\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_3\n}]\n},{\n    title: `Content`,\n    description: `展示了一个基本内容`,\n    code: `const { Content } = _InfoPage;\nconst {Space, Radio} = antd;\nconst {useState} = React;\n\nconst BaseExample = () => {\n  const [listProps, setListProps] = useState({\n    col: 1,\n    size: 'default',\n    labelAlign: 'left'\n  });\n  const onChange = (e, name) => {\n    const val = e?.target.value;\n    setListProps(prevState => Object.assign({}, prevState, {[name]: val}));\n  };\n\n  return (\n    <Space direction='vertical' size={12}>\n      <Radio.Group onChange={(e) => onChange(e, 'col')} value={listProps.col}>\n        <Radio.Button value={1}>1列</Radio.Button>\n        <Radio.Button value={2}>2列</Radio.Button>\n        <Radio.Button value={3}>3列</Radio.Button>\n      </Radio.Group>\n      <Radio.Group onChange={(e) => onChange(e, 'labelAlign')} value={listProps.labelAlign}>\n        <Radio.Button value='left'>左对齐</Radio.Button>\n        <Radio.Button value='center'>中心对齐</Radio.Button>\n        <Radio.Button value='right'>右对齐</Radio.Button>\n        <Radio.Button value='auto'>自适应</Radio.Button>\n      </Radio.Group>\n      <Radio.Group onChange={(e) => onChange(e, 'size')} value={listProps.size}>\n        <Radio.Button value='default'>默认</Radio.Button>\n        <Radio.Button value='small'>small</Radio.Button>\n      </Radio.Group>\n      <Content\n        {...listProps}\n        list={[\n          {label: '标题', content: '内容'},\n          {label: '标题标题', content: '内容内容'},\n          {label: '标题标', content: '内容内容内容内容内容内容内容内容内容内容'},\n          {\n            label: '标题标题标题',\n            content: '内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容'\n          }\n        ]}\n        itemRender={(inner, other) => {\n          return other?.index === 2 ? '此处内容额外自定义' : inner;\n        }}\n      />\n    </Space>\n  );\n};\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_InfoPage\",\n    packageName: \"@kne/current-lib_info-page\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_3\n}]\n},{\n    title: `Descriptions`,\n    description: `展示一个信息详情`,\n    code: `const {Descriptions} = _InfoPage;\n\nconst BaseExample = () => {\n  return (\n    <Descriptions\n      dataSource={[\n        [\n          { label: \"客户名称\", content: \"腾讯\" },\n          {\n            label: \"发票抬头\",\n            content: \"腾讯科技公司\",\n          },\n        ],\n        [\n          { label: \"发票类型\", content: \"增值税专用发票\" },\n          {\n            label: \"发票开具日期\",\n            content: \"2022-08-15\",\n          },\n        ],\n        [{ label: \"退票金额\", content: \"22000.00元\" }],\n        [\n          {\n            label: \"发票号\",\n            content: (\n              <div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n                <div>00384895992774</div>\n              </div>\n            ),\n          },\n        ],\n        [\n          { label: \"是否需要重开发票\", content: \"否\" },\n          {\n            label: \"是否涉及金融变动\",\n            content: \"否\",\n          },\n        ],\n        [\n          { label: \"是否造成实质损失\", content: \"否\" },\n          { label: \"责任归属\", content: \"客户原因\" },\n        ],\n        [\n          {\n            label: \"退票原因\",\n            content: \"退票原因的描述退票原因的描述退票原因的描\",\n          },\n        ],\n        [{ label: \"附件\", content: \"附件名称\" }],\n        [\n          {label: \"操作时间\", content: \"2022-08-01 16:32\"},\n          {label: \"操作人\", content: \"西西歪\", display: false},\n        ],\n        [\n          {\n            label: \"超长内容\",\n            content:\n              \"超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容超长内容\",\n          },\n          {\n            label: \"超长英文\",\n            content:\n              \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n          },\n        ],\n      ]}\n    />\n  );\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_InfoPage\",\n    packageName: \"@kne/current-lib_info-page\",\n    component: component_1\n},{\n    name: \"antd\",\n    packageName: \"antd\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import React from 'react';\nimport {preset as fetchPreset} from '@kne/react-fetch';\nimport {Spin, Empty, message} from 'antd';\nimport axios from 'axios';\nimport {preset as remoteLoaderPreset} from '@kne/remote-loader';\nimport omit from 'lodash/omit';\n\nwindow.PUBLIC_URL = process.env.PUBLIC_URL;\n\nconst componentsCoreRemote = {\n    remote: \"components-core\",\n    url: \"https://registry.npmmirror.com\",\n    tpl: \"{{url}}/@kne-components%2f{{remote}}/{{version}}/files/build\",\n    defaultVersion: '0.1.10',\n};\n\nremoteLoaderPreset({\n    remotes: {\n        default: componentsCoreRemote, 'components-core': componentsCoreRemote, 'components-iconfont': {\n            remote: \"components-iconfont\",\n            url: \"https://registry.npmmirror.com\",\n            tpl: \"{{url}}/@kne-components%2f{{remote}}/{{version}}/files/build\",\n            defaultVersion: '0.1.3',\n        }\n    }\n});\n\nexport const ajax = (() => {\n    const instance = axios.create({\n        validateStatus: function () {\n            return true;\n        }\n    });\n\n    return (params) => {\n        if (params.hasOwnProperty('loader') && typeof params.loader === 'function') {\n            return Promise.resolve(params.loader(omit(params, ['loader']))).then((data) => ({\n                data: {\n                    code: 0, data\n                }\n            })).catch((err) => {\n                message.error(err.message || '请求发生错误');\n                return {data: {code: 500, msg: err.message}};\n            });\n        }\n        return instance(params);\n    };\n})();\n\n\nfetchPreset({\n    ajax,\n    loading: <Spin delay={500}\n                   style={{position: 'absolute', left: '50%', padding: '10px', transform: 'translateX(-50%)'}}/>,\n    error: null,\n    empty: <Empty/>,\n    transformResponse: (response) => {\n        const {data} = response;\n        response.data = {\n            code: data.code === 0 ? 200 : data.code, msg: data.msg, results: data.data\n        };\n        return response;\n    }\n});\n","import { HashRouter } from \"react-router-dom\";\nimport createEntry from \"@kne/modules-dev/dist/create-entry\";\nimport \"@kne/modules-dev/dist/create-entry.css\";\nimport readme from \"readme\";\n\nconst ExampleRoutes = createEntry.ExampleRoutes;\n\nconst App = ({ preset, themeToken, ...props }) => {\n  return (\n      <HashRouter>\n        <ExampleRoutes\n            {...props}\n            paths={[\n              {\n                key: \"components\",\n                path: \"/\",\n                title: \"首页\",\n              },\n            ]}\n            preset={preset}\n            themeToken={themeToken}\n            readme={readme}\n            pageProps={{ menu: null }}\n        />\n      </HashRouter>\n  );\n};\n\nexport default App;\n","import { ajax } from \"./preset\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nconst themeToken = {\n  colorPrimary: \"#4F185A\",\n};\n\nroot.render(\n    <React.StrictMode>\n      <App preset={{ ajax }} themeToken={themeToken} />\n    </React.StrictMode>\n);\n"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","id","module","exports","name","summary","description","packageName","api","example","isFull","className","style","list","title","scope","component","window","PUBLIC_URL","process","componentsCoreRemote","remote","url","tpl","defaultVersion","remoteLoaderPreset","remotes","default","ajax","instance","axios","validateStatus","params","hasOwnProperty","loader","Promise","omit","then","data","catch","err","message","error","msg","fetchPreset","loading","_jsx","Spin","delay","position","left","padding","transform","empty","Empty","transformResponse","response","results","ExampleRoutes","createEntry","_ref","preset","themeToken","props","HashRouter","children","paths","key","path","readme","pageProps","menu","ReactDOM","document","getElementById","render","React","App","colorPrimary"],"sourceRoot":""}